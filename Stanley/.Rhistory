"yes",
"no"
))
partA %>%
group_by(less_than_5_hrs_sleep) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
# 95% ci
p = 322 / (322 + 4022)
n = 322 + 4022
z = 1.96
SE = sqrt(p*(1-p)/n)
lower_bound_a = p - z * SE # 0.0663
upper_bound_a = p + z * SE # 0.0819
# part b)
partB = yrbss %>%
filter(helmet_12m == "never")
partB = partB %>%
mutate(strength_train_every_day = ifelse(
strength_training_7d == 7,
"yes",
"no"
))
partB %>%
group_by(strength_train_every_day) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
# 95% ci
p = 846 / (846 + 3498)
n = 846 + 3498
z = 1.96
SE = sqrt(p*(1-p)/n)
lower_bound_b = p - z * SE # 0.1830
upper_bound_b = p + z * SE # 0.2065
# how does proportion affect the moe?
# moe changes with sample size
# but also changes with proportion p
# sample size is irrelevant so set it to some arbitrary value
n = 1000
# create a variable p that can take any value between 0 and 1
# we use seq()
p = seq(0, 1, 0.01) # from 0 to 1, step 0.01
moe = 2 * sqrt(p*(1-p)/n) # approx moe
# plot the two variables against each other
dd = data.frame(p, moe)
ggplot(data = dd, aes(p, moe)) +
geom_line() +
labs(x="Population parameter",
y = "Margin of Error")
# success-failure condition
# ex 6
p = 0.15
n = 100
data1 = rnorm(n, p, sqrt(p*(1-p)/n))
data = as.data.frame(data1)
ggplot(data, aes(data1)) +
geom_histogram(color="white") +
xlim(0, 0.3) +
labs(y="Count", x="p-hats", title="n=100")
# ex 7
p = 0.15
n = 100
data1 = rnorm(n, p, sqrt(p*(1-p)/n))
data = as.data.frame(data1)
ggplot(data, aes(data1)) +
geom_histogram(color="white") +
xlim(0, 0.3) +
labs(y="Count", x="p-hats", title="p=0.15")
# load atheism data set
download.file("http://www.openintro.org/stat/data/atheism.RData",
destfile = "atheism.RData")
load("atheism.RData")
str(atheism)
# 57 countries
atheism %>%
group_by(nationality) %>%
summarise(count = n())
# task 1
# create 95% ci
# for proportion of Spanish people that
# identify as atheist in 2005
spanish_atheists = atheism %>%
filter(nationality == "Spain")
spanish_atheists = spanish_atheists %>%
mutate(atheists_in_2005 = ifelse(
response == "atheist" & year == 2005,
"yes",
"no"
))
spanish_atheists %>%
group_by(atheists_in_2005) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 115 / (115 + 2176)
n = 115 + 2176
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_1 = p - z * SE
upper_bound_1 = p + z * SE
lower_bound_1 # 0.0413
upper_bound_1 # 0.0843
# task 2
# create 95% ci for spanish aetheists in 2012
spanish_atheists = atheism %>%
filter(nationality == "Spain")
spanish_atheists = spanish_atheists %>%
mutate(atheists_in_2012 = ifelse(
response == "atheist" & year == 2012,
"yes",
"no"
))
spanish_atheists %>%
group_by(atheists_in_2012) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 103 / (103 + 2188)
n = 103 + 2188
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_2 = p - z * SE
upper_bound_2 = p + z * SE
lower_bound_2 # 0.0365
upper_bound_2 # 0.0534
# the two confidence intervals overlap,
# therefore there is no evidence of Spain seeing a change
# in it's atheism index
# task 3
# same task but for americans
american_atheists = atheism %>%
filter(nationality == "United States")
american_atheists = american_atheists %>%
mutate(atheists_in_2005 = ifelse(
response == "atheist" & year == 2005,
"yes",
"no"
))
american_atheists %>%
group_by(atheists_in_2005) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 10 / (10 + 1994)
n = 10 + 1994
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_1 = p - z * SE
upper_bound_1 = p + z * SE
lower_bound_1 # 0.0019
upper_bound_1 # 0.0081
american_atheists = atheism %>%
filter(nationality == "United States")
american_atheists = american_atheists %>%
mutate(atheists_in_2012 = ifelse(
response == "atheist" & year == 2012,
"yes",
"no"
))
american_atheists %>%
group_by(atheists_in_2012) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 50 / (50 + 1954)
n = 50 + 1954
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_2 = p - z * SE
upper_bound_2 = p + z * SE
lower_bound_2 # 0.0181
upper_bound_2 # 0.0318
# the two confidence intervals do not overlap,
# therefore there is evidence of the USA seeing a change
# in it's atheism index
# would expect approx 3 countries to have a change by chance
# at 0.05 significance level
# type 1 error -> probability of 0.05
# number of countries = 57
# P(see a change) = 0.05 * 57 = approx 3
# task 4
# estimate proportion of residents
# that attend a religious service on a weekly basis
# moe no greater than 1% with 95% confidence
# assume p = 0.5
# n = ?
moe = 0.01
z = 1.96
SE = moe / z
var = SE ** 2
n = p*(1-p)/var
n # 934.5688
# therefore you would need to sample at least 935 people
# to have a margin of error of at most 1%
# load atheism data set
download.file("http://www.openintro.org/stat/data/atheism.RData",
destfile = "atheism.RData")
load("atheism.RData")
str(atheism)
# 57 countries
atheism %>%
group_by(nationality) %>%
summarise(count = n())
# task 1
# create 95% ci
# for proportion of Spanish people that
# identify as atheist in 2005
spanish_atheists = atheism %>%
filter(nationality == "Spain")
spanish_atheists = spanish_atheists %>%
mutate(atheists_in_2005 = ifelse(
response == "atheist" & year == 2005,
"yes",
"no"
))
spanish_atheists %>%
group_by(atheists_in_2005) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 115 / (115 + 2176)
n = 115 + 2176
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_1 = p - z * SE
upper_bound_1 = p + z * SE
lower_bound_1 # 0.0413
upper_bound_1 # 0.0843
# task 2
# create 95% ci for spanish aetheists in 2012
spanish_atheists = atheism %>%
filter(nationality == "Spain")
spanish_atheists = spanish_atheists %>%
mutate(atheists_in_2012 = ifelse(
response == "atheist" & year == 2012,
"yes",
"no"
))
spanish_atheists %>%
group_by(atheists_in_2012) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 103 / (103 + 2188)
n = 103 + 2188
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_2 = p - z * SE
upper_bound_2 = p + z * SE
lower_bound_2 # 0.0365
upper_bound_2 # 0.0534
# the two confidence intervals overlap,
# therefore there is no evidence of Spain seeing a change
# in it's atheism index
# task 3
# same task but for americans
american_atheists = atheism %>%
filter(nationality == "United States")
american_atheists = american_atheists %>%
mutate(atheists_in_2005 = ifelse(
response == "atheist" & year == 2005,
"yes",
"no"
))
american_atheists %>%
group_by(atheists_in_2005) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 10 / (10 + 1994)
n = 10 + 1994
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_1 = p - z * SE
upper_bound_1 = p + z * SE
lower_bound_1 # 0.0019
upper_bound_1 # 0.0081
american_atheists = atheism %>%
filter(nationality == "United States")
american_atheists = american_atheists %>%
mutate(atheists_in_2012 = ifelse(
response == "atheist" & year == 2012,
"yes",
"no"
))
american_atheists %>%
group_by(atheists_in_2012) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
p = 50 / (50 + 1954)
n = 50 + 1954
SE = sqrt(p*(1-p)/n)
z = 1.96
lower_bound_2 = p - z * SE
upper_bound_2 = p + z * SE
lower_bound_2 # 0.0181
upper_bound_2 # 0.0318
# the two confidence intervals do not overlap,
# therefore there is evidence of the USA seeing a change
# in it's atheism index
# would expect approx 3 countries to have a change by chance
# at 0.05 significance level
# type 1 error -> probability of 0.05
# number of countries = 57
# P(see a change) = 0.05 * 57 = approx 3
# task 4
# estimate proportion of residents
# that attend a religious service on a weekly basis
# moe no greater than 1% with 95% confidence
# assume p = 0.5
# n = ?
moe = 0.01
z = 1.96
SE = moe / z
var = SE ** 2
n = p*(1-p)/var
n # 934.5688
# therefore you would need to sample at least 935 people
# to have a margin of error of at most 1%
moe = 0.01
z = 1.96
p = 0.65
SE = moe / z
var = SE ** 2
n = p*(1-p)/var
n # 934.5688
moe = 0.01
z = 1.96
p = 0.5
SE = moe / z
var = SE ** 2
n = p*(1-p)/var
n # 934.5688
pchisq(284.9, 3)
pchisq(284.9, 3) - 1
pchisq(277.5, 3) - 1
dpois(4,4)
pnorm(9, 10, 9)
pnorm(12, 10, 9)
pnorm(12, 10, 9) - 1
pnorm(8, 10, 9)
install.packages("tidyverse")
install.packages("infer")
install.packages("openintro")
library(tidyverse)
library(infer)
library(openintro)
head(yrbss)
str(yrbss)
len(yrbss)
length(yrbss)
width(yrbss)
length(transpose(yrbss))
# find how many observations are missing
sum(is.na(yrbss$weight))
# can remove observations with missing values
yrbss = na.omit(yrbss)
yrbss
summary(yrbss$weight)
ggplot(data=yrbss, mapping=aes(y=weight)) +
geom_boxplot()
ggplot(data=yrbss, mapping=aes(y=weight)) +
geom_histogram()
ggplot(data=yrbss, mapping=aes(x=weight)) +
geom_histogram()
yrbss = yrbss %>%
mutate(physical_3plus = ifelse(yrbss$physically_active_7d>2,
"Yes", "No"))
ggplot(daa=yrbss, mapping=aes(y=weight)) +
geom.boxplot()
ggplot(daa=yrbss, mapping=aes(y=weight)) +
geom_boxplot()
ggplot(daa=yrbss, mapping=aes(y=weight)) +
geom_boxplot()
library(tidyverse)
library(infer)
library(openintro)
head(yrbss)
str(yrbss)
# find how many observations are missing
sum(is.na(yrbss$weight))
# is.na creates a vector that corresponds to the variable provided
# can remove observations with missing values
yrbss = na.omit(yrbss)
summary(yrbss$weight)
ggplot(data=yrbss, mapping=aes(y=weight)) +
geom_boxplot()
ggplot(data=yrbss, mapping=aes(x=weight)) +
geom_histogram()
# create physical_3plus variable
# coded as yes if they are physically active for at least 3 days
# else no
yrbss = yrbss %>%
mutate(physical_3plus = ifelse(yrbss$physically_active_7d>2,
"Yes", "No"))
ggplot(df, aes(x=team, y=points, fill=physical_3plus)) +
geom_boxplot() +
ggtitle('Points by Team')
ggplot(data=yrbss, aes(x=team, y=points, fill=physical_3plus)) +
geom_boxplot() +
ggtitle('Points by Team')
ggplot(data=yrbss, aes(x=physical_3plus, y=weight)) +
geom_boxplot() +
ggplot(data=yrbss, aes(x=physical_3plus, y=weight)) +
geom_boxplot() +
quit
ggplot(data=yrbss, aes(x=physical_3plus, y=weight)) +
geom_boxplot() +
ggplot(data=yrbss, aes(x=physical_3plus, y=weight)) +
geom_boxplot()
ggplot(data=yrbss, mapping=aes(x=physical_3plus, y=weight)) +
geom_boxplot()
yrbss %>%
group_by(physical_3plus) %>%
summarise(mean_weight = mean(weight, na.rm=TRUE))
# size of yes/no groups
yrbss %>%
group_by(physical_3plus) %>%
summarise(count=n())
ggplot(yrbss, aes(y=weight, x=physical_3plus)) +
geom_boxplot()
# confidence interval
yes = yrbss %>%
filter(physical_3plus == "yes")
no = yrbss %>%
filter(physical_3plus == "no")
mu1 = mean(yes$weight)
mu2 = mean(no$weight)
obs_diff = mu1 - mu2
n1 = 5695
n2 = 2656
t.star = 1.96 # 95% CI
sigma_squared_1 = var(yes$weight)
sigma_squared_2 = var(no$weight)
standard.error = sqrt((sigma_squared_1/n1) + (sigma_squared_2/n2))
lower.bound = obs_diff - t.star * standard.error
upper.bound = obs_diff + t.star * standard.error
c(lower.bound, upper.bound)
# confidence interval
yes = yrbss %>%
filter(physical_3plus == "yes")
no = yrbss %>%
filter(physical_3plus == "no")
mu1 = mean(yes$weight)
mu2 = mean(no$weight)
obs_diff = mu1 - mu2
n1 = 5695
n2 = 2656
t_star = 1.96 # 95% CI
sigma_squared_1 = var(yes$weight)
sigma_squared_2 = var(no$weight)
standard_error = sqrt((sigma_squared_1/n1) + (sigma_squared_2/n2))
lower_bound = obs_diff - t_star * standard_error
upper_bound = obs_diff + t_star * standard_error
c(lower.bound, upper.bound)
summarise(yes)
summarise(no)
yes
no
no = yrbss %>%
filter(physical_3plus == "No")
# confidence interval
yes = yrbss %>%
filter(physical_3plus == "Yes")
no = yrbss %>%
filter(physical_3plus == "No")
mu1 = mean(yes$weight)
mu2 = mean(no$weight)
obs_diff = mu1 - mu2
n1 = 5695
n2 = 2656
t_star = 1.96 # 95% CI
sigma_squared_1 = var(yes$weight)
sigma_squared_2 = var(no$weight)
standard_error = sqrt((sigma_squared_1/n1) + (sigma_squared_2/n2))
lower_bound = obs_diff - t_star * standard_error
upper_bound = obs_diff + t_star * standard_error
c(lower.bound, upper.bound)
yes
no
c(lower_bound, upper_bound)
library(tidyverse)
word_freq_data = read.csv("wordFreq.csv")
setwd("C:/Users/varad/OneDrive/Desktop/CodeOlympicsBlokes/Stanley")
word_freq_data = read.csv("wordFreq.csv")
View(word_freq_data)
View(word_freq_data)
ggplot(word_freq_data, aes(x=word, y=count)) +
geom_histogram()
word_freq_data = read.csv("wordFreq.csv")
first_50 = head(word_freq_data, 50)
ggplot(first_50, aes(x=word, y=count)) +
geom_histogram()
View(first_50)
View(first_50)
ggplot(first_50, aes(x=word, y=count)) +
geom_histogram()
ggplot(first_50, aes(x=word, y=count)) +
geom_col()
ggplot(first_50, aes(x=count, y=word)) +
geom_col()
ggplot(first_50, aes(x=count, y=word)) +
geom_bar() +
ggplot(first_50, aes(x=count, y=word)) +
geom_bar()
ggplot(first_50, aes(x=count, y=word)) +
geom_bar()
ggplot(first_50, aes(x=word)) +
geom_bar()
ggplot(first_50, aes(x=word, y=count)) +
geom_bar()
ggplot(first_50, aes(x=word, y=count)) +
geom_col()
ggplot(first_50, aes(x=reorder(word), y=count)) +
geom_col()
ggplot(first_50, aes(x=word, y=count)) +
geom_col()
ggplot(first_50, aes(x=word, y=count)) +
geom_bar(stat="identity")
